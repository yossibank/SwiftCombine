import CoreData

/**
 * ★ CoreDataって何？
 * モデルオブジェクトを永続化するためのフレームワーク(O/Rマッピングフレームワーク)
 * アプリ上で扱うデータを保存、更新、削除、更新(CRUD)を簡潔に書くための仕組み
 * DBのようにデータ構造を設定できる
 *
 * ★ O/Rマッピングって何？(Object/Relational Mapping)
 * アプリを動かす上で、処理するデータが展開されているメモリ上のデータを、アプリ内のRDB(Relational Data Base)のレコード構造に変換して更新してくれる
 * 逆にアプリのメモリ上に、あたかもクエリを叩いたかのように、特定条件に該当するデータをRDBから引っ張ってきて展開する
 * つまり、オブジェクトとRDBの橋渡し役
 *
 * ----------------------------------------------------------------------
 *    -------------              -------------              -------------
 *    --オブジェクト--   → 保存 →   --Core Data--   ← 検索 ←   --データベース--
 *    -------------              -------------              -------------
 * ----------------------------------------------------------------------
 *
 * ★ データの取得
 *  -----  ----------------- → → →  ------------------------ → → → ------------------------------ → → → -------------------
 *  -APP-  -NSManagedObject-          -NSManagedObjectContext-        -NSPersistendStoreCoordinator-         -NSPersistentStore-
 *  -----  ----------------- ← ← ←  ------------------------　← ← ← ------------------------------　← ← ← -------------------
 *
 * ★ NSPersistentContainer 各クラスをラッピングして、使えるようにするクラス
 * ★ NSManagedObjectContext データを引っ張ったり、更新するクラス
 * ★ NSManagedObject DBから引っ張ってきたレコードデータのようなもの(必ずNSManagedObjectContextと紐づく)
 * ★ NSPersistentStoreCoordinator NSPersistentStoreを管理するクラス
 * ★ NSPersistentStore データベース(SQLite)の情報を管理するクラス
 */
